version: "3.7"
services:
    gateway:
        image: ${REGISTRY:-localhost}/auction-dev-gateway:cache
        build:
            context: gateway/docker
            dockerfile: development/nginx/Dockerfile
            cache_from:
                - ${REGISTRY:-localhost}/auction-dev-gateway:cache
        ports:
            - "8080:8080"
            - "8081:8081"
            - "8082:8082"
        depends_on:
            - frontend
            - api
            - mailer

    frontend:
        image: ${REGISTRY:-localhost}/auction-dev-frontend:cache
        build:
            context: frontend/docker/development/nginx
            cache_from:
                - ${REGISTRY:-localhost}/auction-dev-frontend:cache
        depends_on:
            - frontend-node

    frontend-node:
        image: ${REGISTRY:-localhost}/auction-dev-frontend-node:cache
        build:
            context: frontend/docker/development/node
            cache_from:
                - ${REGISTRY:-localhost}/auction-dev-frontend-node:cache
        volumes:
            - ./frontend:/app
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
        tty: true

    frontend-node-cli:
        image: ${REGISTRY:-localhost}/auction-dev-frontend-node-cli:cache
        build:
            context: frontend/docker/development/node
            cache_from:
                - ${REGISTRY:-localhost}/auction-dev-frontend-node-cli:cache
        volumes:
            - ./frontend:/app

    api:
        image: ${REGISTRY:-localhost}/auction-dev-api:cache
        build:
            context: api/docker
            dockerfile: development/nginx/Dockerfile
            cache_from:
                - ${REGISTRY:-localhost}/auction-dev-api:cache
        volumes:
            - ./api:/app
        depends_on:
            - api-php-fpm

    api-php-fpm:
        image: ${REGISTRY:-localhost}/auction-dev-api-php-fpm:cache
        build:
            context: api/docker
            dockerfile: development/php-fpm/Dockerfile
            cache_from:
                - ${REGISTRY:-localhost}/auction-dev-api-php-fpm:cache
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            PHP_IDE_CONFIG: serverName=API
            DB_HOST: api-postgres
            DB_USER: app
            DB_PASSWORD: secret
            DB_NAME: app
            MAILER_HOST: mailer
            MAILER_PORT: 1025
            MAILER_USER: app
            MAILER_PASSWORD: secret
            MAILER_ENCRYPTION: tcp
            MAILER_FROM_EMAIL: mail@app.test
            FRONTEND_URL: http://localhost:8080
            SENTRY_DSN: ""
        volumes:
            - ./api:/app

    api-php-cli:
        image: ${REGISTRY:-localhost}/auction-dev-api-php-cli:cache
        build:
            context: api/docker
            dockerfile: development/php-cli/Dockerfile
            cache_from:
                - ${REGISTRY:-localhost}/auction-dev-api-php-cli:cache
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            DB_HOST: api-postgres
            DB_USER: app
            DB_PASSWORD: secret
            DB_NAME: app
            MAILER_HOST: mailer
            MAILER_PORT: 1025
            MAILER_USER: app
            MAILER_PASSWORD: secret
            MAILER_ENCRYPTION: tcp
            MAILER_FROM_EMAIL: mail@app.test
            FRONTEND_URL: http://localhost:8080
            SENTRY_DSN: ""
        volumes:
            - ./api:/app

    api-postgres:
        image: postgres:12.2-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: app
        volumes:
            - api-postgres:/var/lib/postgresql/data
        ports:
            - "54321:5432"

    mailer:
        image: mailhog/mailhog

    cucumber-node-cli:
        image: ${REGISTRY:-localhost}/auction-dev-cucumber-node-cli:cache
        build:
            context: cucumber/docker/development/node
            cache_from:
                - ${REGISTRY:-localhost}/auction-dev-cucumber-node-cli:cache
        volumes:
            - ./cucumber:/app

volumes:
    api-postgres:
